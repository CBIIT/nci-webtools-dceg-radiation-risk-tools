"""
Django settings for fallout project.

Generated by 'django-admin startproject' using Django 1.10.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import datetime

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '--redacted--'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',    
    'compressor',
    'fallout',
    'fallout.calculator',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'fallout.calculator.utils.ThreadLocals',
]

ROOT_URLCONF = 'fallout.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'fallout.context_processors.fallout_context',
            ],
        },
    },
]

WSGI_APPLICATION = 'fallout.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3' if DEBUG else '',
        'NAME': ':memory:' if DEBUG else '', #'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# List of finder classes that know how to find static files in
# various locations.
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    # 'django.contrib.staticfiles.finders.DefaultStorageFinder',
    'compressor.finders.CompressorFinder',
]

# http://django-compressor.readthedocs.org/en/latest/settings/#django.conf.settings.COMPRESS_ENABLED
# Boolean that decides if compression will happen.
COMPRESS_ENABLED = True

# https://docs.djangoproject.com/en/1.8/ref/settings/#static-root
# The absolute path to the directory where collectstatic will collect static files for deployment.
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

# https://docs.djangoproject.com/en/1.11/ref/settings/#caches
# enhanced file system caching that does not cull 
CACHES = {
    'default': {
        'BACKEND': 'fallout.caches.NoCullFileBasedCache',
        'LOCATION': os.path.join(BASE_DIR, 'cache'),
        'TIMEOUT': 300,
        'OPTIONS': {
            'MAX_ENTRIES': 300
        }        
    },
}

# https://docs.djangoproject.com/en/1.11/topics/logging/
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
        }
    },
    'loggers': {
        'fallout.calculator.tasks': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': False,
        },
    }
}

# https://docs.djangoproject.com/en/1.11/topics/http/sessions/#using-cached-sessions
# We're not using a database, so store sessions in cache
SESSION_ENGINE = "django.contrib.sessions.backends.cache"

# https://docs.djangoproject.com/en/1.11/ref/settings/#session-expire-at-browser-close
# Whether to expire the session when the user closes their browser.
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# https://docs.djangoproject.com/en/1.11/ref/settings/#session-cookie-age
# The age of session cookies, in seconds.
SESSION_COOKIE_AGE = 86400 # 24 hours by default

# https://docs.djangoproject.com/en/1.11/ref/settings/#session-save-every-request
# Whether to save the session data on every request.
SESSION_SAVE_EVERY_REQUEST = True

# https://docs.djangoproject.com/en/1.11/ref/settings/#session-file-path
# Control where Django stores session files.
SESSION_FILE_PATH = '%s' % os.path.join(BASE_DIR, 'session')

# https://docs.djangoproject.com/en/1.11/ref/settings/#email-host
EMAIL_HOST = '--redacted--'

## Project Settings ##

# An absolute URL root that will be used for things like notification emails.
BASE_URL = 'http://localhost:8000'

# RadRAT version
FALLOUT_VERSION = "4.2"

# Analytica ADE version used on Windows server. 
ADE_VERSION = "4.6"

# Windows server address
WINDOWS_SERVER = '--redacted--'
FALSE_WINDOWS_SERVER = 'FALSE_EXECUTION_SERVER'

DISPLAY_RAW_RESULTS = False

MINIMUM_DOB = datetime.date(1910, 1, 1)
MAXIMUM_DOB = datetime.date(1982, 12, 31)
DEFAULT_DOB = datetime.date(1945, 1, 1)

MINIMUM_BEGIN_DATE = datetime.date(1951, 1, 1)
MAXIMUM_BEGIN_DATE = datetime.date(1982, 12, 31)

CELERYQ = 'QFALLOUT'

from celery.schedules import crontab
CELERYBEAT_SCHEDULE = {
    'schedule-name': {  # example: 'file-backup' 
        'task': 'clean_execution_tasks',  # example: 'files.tasks.cleanup' 
        'schedule': crontab(minute=0, hour=0), # Execute daily at midnight.
    },
}

CLEAR_RECORD_ON_RENDER = True

INCLUDE_WEB_ANALYTICS = False

DATA_UPLOAD_MAX_NUMBER_FIELDS = 2000